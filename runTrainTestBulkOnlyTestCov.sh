#!/bin/bash
#set -x
#(trap - INT; exit 1)  # susceptible to ctrl+c
if [ "$#" -ne 1 ]; then
	echo "Illegal number of parameters"
	echo "useage:$0 operation"
	echo "ex: $0 coverage-error-call"
	exit 1
fi
op=$1

if [ "$op" != "coverage-error-call" ] && \
	[ "$op" != "coverage-branches" ]; then
	echo "invalid value of the first parameter $op"
	echo " must be [coverage-error-call, coverage-branches] "
	exit 1
fi


function exitIfError() {
	if ! [ $? -eq 0 ]; then
	echo "myERROR: ${1}"
	exit 1
fi
}
#coverageBranchesArr=("00003" "00004" "00005" "00006" "00007" "00008" "00009" "00010" "00011" "00012" "00013" "00014" "00015" "00016" "00017" "00018" "00019" "00020" "00021" "00022" "00023" "00024" "00025" "00026" "00027" "00028" "00029" "00030" "00031" "00032" "00033" "00034" "00035" "00036" "00037" "00038" "00039" "00040" "00041" "00042" "00043" "00044" "00045" "00046" "00047" "00048" "00049" "00050" "00051" "00052" "00053" "00054" "00055" "00056" "00057" "00058" "00059" "00060" "00061" "00062" "00063" "00064" "00065" "00066" "00067" "00068" "00069" "00070" "00071" "00072" "00073" "00074" "00075" "00076" "00077" "00078" "00079" "00080" "00081" "00082" "00083" "00084" "00085" "00086" "00087" "00088" "00089" "00090" "00091" "00092" "00093" "00094" "00095" "00096" "00097" "00098" "00099" "00100" "00101" "00102" "00103" "00104" "00105" "00106" "00107" "00108" "00109" "00110" "00111" "00112" "00113" "00114" "00115" "00116" "00117" "00118" "00119" "00120" "00121" "00122" "00123" "00124" "00125" "00126" "00127" "00128" "00129" "00130" "00131" "00132" "00133" "00134" "00135" "00136" "00137" "00138" "00139" "00140" "00141" "00142" "00143" "00144" "00145" "00146" "00147" "00148" "00149" "00150" "00151" "00152" "00153" "00154" "00155" "00156" "00157" "00158" "00159" "00160")
#coverageBranchesArr=("00002")
resVerifiedDir="./results-verified"
#resVerifiedDir="/home/hosam/Desktop/shared/to_repeat/results-verified"
if [ "$op" == "coverage-branches" ]; then
	coverageBranchesArr=(\
	#"00001" "00002" "00003" "00004" "00005" "00006" "00007" "00008" "00009" "00010" "00011" "00012" \
	#"00013" "00014" "00015" "00016" "00017" "00018" "00019" "00020" "00021" "00022" "00023" "00024" \
	#"00025" "00026" "00027" "00028" "00029" "00030" "00031" "00032" "00033" "00034" "00035" "00036" \
	#"00037" "00038" "00039" "00040" "00041" "00042" "00043" "00044" "00045" "00046" "00047" "00048" \
	#"00049" "00050" "00051" "00052" "00053" "00054" "00055" "00056" "00057" "00058" "00059" "00060" \
	#"00061" "00062" "00063" "00064" "00065" "00066" "00067" "00068" "00069" "00070" "00071" "00072" \
	#"00073" "00074" "00075" "00076" "00077" "00078" "00079" "00080" "00081" "00082" "00083" "00084" \
	#"00085" "00086" "00087" "00088" "00089" "00090" "00091" "00092" "00093" "00094" "00095" "00096" \
	#"00097" "00098" "00099" "00100" "00101" "00102" "00103" "00104" "00105" "00106" "00107" "00108" \
	#"00109" "00110" "00111" "00112" \
	"00113" "00114" "00115" "00116" "00117" "00118" "00119" "00120" \
	"00121" "00122" "00123" "00124" "00125" "00126" "00127" "00128" "00129" "00130" "00131" "00132" \
	"00133" "00134" "00135" "00136" "00137" "00138" "00139" "00140" "00141" "00142" "00143" "00144" \
	"00145" "00146" "00147" "00148" "00149" "00150" "00151" "00152" "00153" "00154" "00155" "00156" \
	"00157" "00158" "00159" "00160" "00625" "00725" "00726" "00727" "00728" "00729" "00730" "00731" \
	"00732" "00733" "00734" "00735" "00736" "00737" "00738" "00739" "00740" "00741" "00742" "00743" \
	"00744" "00745" "00746" "00747" "00748" "00749" "00750" "00751" "00752" "00753" "00754" "00755" \
	"00756" "00757" "00758" "00759" "00760" "00761" "00762" "00763" "00764" "00765" "00766" "00767" \
	"00768" "00769" "00770" "00771" "00772" "00773" "00774" "00775" "00776" "00777" "00778" "00779" \
	"00780" "00781" "00782" "00783" "00784" "00785" "00786" "00787" "00788" "00789" "00790" "00791" \
	"00792" "00793" "00794" "00795" "00796" "00797" "00798" "00799" "00800" "00801" "00802" "00803" \
	"00804" "00805" "00806" "00807" "00808" "00809" "00810" "00811" "00812" "00813" "00814" "00815" \
	"00816" "00817" "00818" "00819" "00820" "00821" "00822" "00823" "00824" "00825" "00826" "00827" \
	"00828" "00829" "00830" "00831" "00832" "00833" "00834" "00835" "00836" "00837" "00838" "00839" \
	"00840" "00841" "00842" "00843" "00844" "00845" "00846" "00847" "00848")
	#coverageBranchesArr=("00469")
	for f in ${coverageBranchesArr[@]}; do
		runDir="${resVerifiedDir}/coverage-branches_${f}"
		if [ -d "$runDir" ]; then
			echo "${runDir} is ok ..."
			echo "coverage-branches_${f}" > "${runDir}/num.txt"
			rm -r -f ./output
			rm -f ./instrumented_*.gcov
			rm -f ./harness.c.gcov
			rm -r -f ${runDir}/Coverage-Branches/*/*/test-suite
			rm -r -f ${runDir}/TestCov.*.logfiles
			rm -f ${runDir}/TestCov.*.*
			rm -f ${runDir}/coverage-branches_*.csv
			rm -f ${runDir}/coverage-branches_*_res.table.html
			rm -f ${runDir}/Coverage-Branches/*/*/FuSeBMC_Fuzzer_output_goals.txt
			rm -f ${runDir}/FuSeBMC-testcomp.*.xml.fixed.xml
			rm -f ${resVerifiedDir}/dataset/coverage-branches_${f}.csv
			
			./runTrainTestOnlyTestCov.sh coverage-branches $f
		else
			echo "${runDir} is NOT ok ..."
		fi
		
		#exitIfError "./runTrainTestOnlyTestCov.sh coverage-branches ${f}"
	done
fi

if [ "$op" == "coverage-error-call" ]; then
	coverageErrorCallArr=(\
	"00001" "00002" "00003" "00004" "00005" "00006" "00007" "00008" "00009" "00010" "00011" "00012" \
	"00013" "00014" "00015" "00016" "00017" "00018" "00019" "00020" "00041" "00042" "00043" "00044" \
	"00045" "00046" "00047" "00048" "00049" "00050" "00051" "00052" "00053" "00054" "00055" "00056" \
	"00057" "00058" "00059" "00060" "00061" "00062" "00063" "00064" "00065" "00066" "00067" "00068" \
	"00069" "00070" "00071" "00072" "00073" "00074" "00075" "00076" "00077" "00078" "00079" "00080" \
	"00081" "00082" "00083" "00084" "00085" "00086" "00087" "00088" "00089" "00090" "00091" "00092" \
	"00093" "00094" "00095" "00096" "00097" "00098" "00099" "00100" "00101" "00102" "00103" "00104" \
	"00105" "00106" "00107" "00108" "00109" "00110" "00111" "00112" "00113" "00114" "00115" "00116" \
	"00117" "00118" "00119" "00120" "00141" "00142" "00143" "00144" "00145" "00146" "00147" "00148" \
	"00149" "00150" "00151" "00152" "00153" "00154" "00155" "00156" "00157" "00158" "00159" "00160" \
	"00181" "00182" "00183" "00184" "00185" "00186" "00187" "00188" "00189" "00190" "00191" "00192" \
	"00193" "00194" "00195" "00196" "00197" "00198" "00199" "00200" "00221" "00222" "00223" "00224" \
	"00225" "00226" "00227" "00228" "00229" "00230" "00231" "00232" "00233" "00234" "00235" "00236" \
	"00237" "00238" "00239" "00240" "00261" "00262" "00263" "00264" "00265" "00266" "00267" "00268" \
	"00269" "00270" "00271" "00272" "00273" "00274" "00275" "00276" "00277" "00278" "00279" "00280" \
	"00281" "00282" "00283" "00284" "00285" "00286" "00287" "00288" "00289" "00290" "00291" "00292" \
	"00293" "00294" "00295" "00296" "00297" "00298" "00299" "00300" "00301" "00302" "00303" "00304" \
	"00305" "00306" "00307" "00308" "00309" "00310")
	for f in ${coverageErrorCallArr[@]}; do
		runDir="${resVerifiedDir}/coverage-error-call_${f}"
		if [ -d "$runDir" ]; then
			echo "${runDir} is ok ..."
			echo "coverage-error-call_${f}" > "${runDir}/num.txt"
			rm -r -f ./output
			rm -f ./instrumented_*.gcov
			rm -f ./harness.c.gcov
			rm -r -f ${runDir}/Coverage-Error-Call/*/*/test-suite
			rm -r -f ${runDir}/TestCov.*.logfiles
			rm -f ${runDir}/TestCov.*.*
			rm -f ${runDir}/coverage-error-call_*.csv
			rm -f ${runDir}/coverage-error-call_*_res.table.html
			rm -f ${runDir}/FuSeBMC-testcomp.*.xml.fixed.xml
			rm -f ${resVerifiedDir}/dataset/coverage-error-call_${f}.csv
			
			./runTrainTestOnlyTestCov.sh coverage-error-call $f
		else
			echo "${runDir} is NOT ok ..."
		fi
		#./runTrainTestOnlyTestCov.sh coverage-error-call $f
		#exitIfError "./runTrainTestOnlyTestCov.sh coverage-error-call ${f}"
	done
fi
echo "$0 Done !!!"
